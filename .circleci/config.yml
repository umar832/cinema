version: 2.1
executors:
  app-executor:
    docker:
    - image: circleci/node:latest
    working_directory: ~/project 

aliases:
  - &show-current-branch-name
     run:
       name: Show current branch
       command: echo ${CIRCLE_BRANCH}
  - &restore-cache
     restore_cache:
       keys:
         - app-{{ checksum "package.json" }}
         - app-
  - &Install-dependecies
     run:
       name: Intsall dependecies
       command: npm Install 
  - &save-cache
     save_cache:
        paths:
          - node_modules
        key: app-{{ checksum "package.json" }}
  - &Install-AWS-CLI
     run:
       name: Installing AWS CLI
       working_directory: ~/ 
       command: |
         sudo apt-get -t -qq update
         suod apt-get install -y awscli 
         sudo apt-get install -y python-pip python-dev build-essential 
      
  - &Build-project
     run:
       name: build Project
       command: |
         npm install
         npm run build
         cd build 
         zip ../build.zip -r * .[^.]*
         echo "Build successfull"
           
     

jobs:
  build:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *restore-cache
      - *Install-dependecies
      - *save-cache

deploy-to-aws-s3:
  docker:
    executor: app-executor 
  steps:
    - checkout
    - *show-current-branch-name
    - *Install-AWS-CLI 
    - *Build-project
    - run:
        name: Deploy to AWS S3
        command: |
          if [ "${CIRCLE_BRANCH}" == "main" ] 
          then
            aws --region ${AWS_REGION} s3 sync ~/project/build/deploy s3://${AWS_PROD_BUCKET} --delete
          elif [ "${CIRCLE_BRANCH}" == "stage"]
            aws --region ${AWS_REGION} s3 sync ~/project/build/deploy s3://${AWS_STAGE_BUCKET} --delete
          else
            aws --region ${AWS_REGION} s3 sync ~/project/build/deploy s3://${AWS_DEV_BUCKET} --delete 
          fi


deploy-to-aws-cloudfront:
  docker:
    executor: app-executor
  steps:
    - checkout
    - *show-current-branch-name
    - *Install-AWS-CLI 
    - *Build-project
    - run:
        name: Deploy to AWS Cloudfront
        command: |
          aws configure set preview.cloudfront true
          if [ "${CIRCLE_BRANCH}" == "main" ]
          then
            aws cloudfront create-invalidation --disturbation-id ${PROD_DISTRIBUTION_ID} --paths /\*
          elif [ "${CIRCLE_BRANCH}" == "stage"]
            aws cloudfront create-invalidation --disturbation-id ${STAGE_DISTRIBUTION_ID} --paths /\* 
          else
            aws cloudfront create-invalidation --disturbation-id ${DEV_DISTRIBUTION_ID} --paths /\* 
          fi


workflow:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3:
          reques:
            - build
          filters:
            branches:
              only:
                - develope
                - stage 
                - main
      - deploy-to-aws-cloudfront:
          reques:
            - deploy-to-aws-s3
          filters:
            branches:
              only:
                - develope
                - stage 
                - main
